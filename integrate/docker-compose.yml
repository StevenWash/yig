#  vim:ts=2:sts=2:sw=2:et
#  There is a bug of ceph/demo, it does not support NETWORK_AUTO_DETECT
#  So I use static IP address for this docker-compose file

version: '2'

services:
  ceph:
    image: journeymidnight/ceph
    container_name: ceph
    environment:
      - MON_IP=10.5.0.6
      - CEPH_PUBLIC_NETWORK=10.5.0.0/16
    networks:
      vpcbr:
        ipv4_address: "10.5.0.6"
    volumes:
      - ./cephconf:/etc/ceph/

  redis:
    image: redis
    container_name: redis
    command: redis-server --requirepass hehehehe
    ports:
      - "6379:6379"
    networks:
      vpcbr:
        ipv4_address: "10.5.0.8"

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      vpcbr:
        ipv4_address: "10.5.0.9"
  

  pd0:
    image: pingcap/pd:latest
    container_name: pd0
    ports:
      - "2379:2379"
    volumes:
      - ./tikvconf/pd.toml:/pd.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --name=pd0
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd0:2379
      - --advertise-peer-urls=http://pd0:2380
      - --initial-cluster=pd0=http://pd0:2380,pd1=http://pd1:2380,pd2=http://pd2:2380
      - --data-dir=/data/pd0
      - --config=/pd.toml
#      - --log-file=/logs/pd0.log
    networks:
      vpcbr:
        ipv4_address: "10.5.0.100"

  pd1:
    image: pingcap/pd:latest
    container_name: pd1
    ports:
      - "2378:2378"
    volumes:
      - ./tikvconf/pd.toml:/pd.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --name=pd1
      - --client-urls=http://0.0.0.0:2378
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd1:2378
      - --advertise-peer-urls=http://pd1:2380
      - --initial-cluster=pd0=http://pd0:2380,pd1=http://pd1:2380,pd2=http://pd2:2380
      - --data-dir=/data/pd1
      - --config=/pd.toml
#      - --log-file=/logs/pd1.log
    networks:
      vpcbr:
        ipv4_address: "10.5.0.101"

  pd2:
    image: pingcap/pd:latest
    container_name: pd2
    ports:
      - "2377:2377"
    volumes:
      - ./tikvconf/pd.toml:/pd.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --name=pd2
      - --client-urls=http://0.0.0.0:2377
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd2:2377
      - --advertise-peer-urls=http://pd2:2380
      - --initial-cluster=pd0=http://pd0:2380,pd1=http://pd1:2380,pd2=http://pd2:2380
      - --data-dir=/data/pd2
      - --config=/pd.toml
#      - --log-file=/logs/pd2.log
    networks:
      vpcbr:
        ipv4_address: "10.5.0.102"

  tikv0:
    image: pingcap/tikv:latest
    container_name: tikv0
    ports:
      - "20160:20160"
    volumes:
      - ./tikvconf/tikv.toml:/tikv.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv0:20160
      - --data-dir=/data/tikv0
      - --pd=pd0:2379,pd1:2378,pd2:2377
      - --config=/tikv.toml
#      - --log-file=/logs/tikv0.log
    depends_on:
      - "pd0"
      - "pd1"
      - "pd2"
    networks:
       vpcbr:
         ipv4_address: "10.5.0.103"

  tikv1:
    image: pingcap/tikv:latest
    container_name: tikv1
    ports:
      - "20161:20161"

    volumes:
      - ./tikvconf/tikv.toml:/tikv.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --addr=0.0.0.0:20161
      - --advertise-addr=tikv1:20161
      - --data-dir=/data/tikv1
      - --pd=pd0:2379,pd1:2378,pd2:2377
      - --config=/tikv.toml
#      - --log-file=/logs/tikv1.log
    depends_on:
      - "pd0"
      - "pd1"
      - "pd2"
    networks:
       vpcbr:
         ipv4_address: "10.5.0.104"

  tikv2:
    image: pingcap/tikv:latest
    container_name: tikv2
    ports:
      - "20162:20162"

    volumes:
      - ./tikvconf/tikv.toml:/tikv.toml:ro
      - ./data:/data
      - ./logs:/logs
    command:
      - --addr=0.0.0.0:20162
      - --advertise-addr=tikv2:20162
      - --data-dir=/data/tikv2
      - --pd=pd0:2379,pd1:2378,pd2:2377
      - --config=/tikv.toml
#      - --log-file=/logs/tikv2.log
    depends_on:
      - "pd0"
      - "pd1"
      - "pd2"
    networks:
       vpcbr:
         ipv4_address: "10.5.0.105"

  tidb:
    image: pingcap/tidb:latest
    container_name: tidb
    ports:
      - "4000:4000"
      - "10080:10080"
    volumes:
      - ./tikvconf/tidb.toml:/tidb.toml:ro
      - ./logs:/logs
    command:
      - --store=tikv
      - --path=pd0:2379,pd1:2378,pd2:2377
      - --config=/tidb.toml
      - --log-file=/logs/tidb.log
    depends_on:
      - "tikv0"
      - "tikv1"
      - "tikv2"
    networks:
       vpcbr:
         ipv4_address: "10.5.0.17"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      vpcbr:
        ipv4_address: "10.5.0.22"

  kafka:
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines: 
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup. 
    # If the latter is true, you will need to change the value 'localhost' in 
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those 
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      vpcbr:
        ipv4_address: "10.5.0.21"


networks:
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1
